What is rust?
    - Systems language

Why rust?
    - Garbage collection
        - no need to manage it 
        - checks on demand when needed (different from Java)
        - efficient, best of both worlds
    - Package manager, Cargo (like pip from python)

# print.rs
- need to have a placeholder for printing variables

# vars.rs
- variables are immutable by default (can't reassign them)
    - like const
- variables hold primitive data or referenced to data
- rust is a block-scoped language (a variable pertains to a scope (function))

# types.rs
- integers: u8, i8, u16, i16, u32, i32, u64, i64, u128, i128
- floats: f32, f64
- boolean: bool
- characters: char
- tuples: ()
- arrays, fixed size:
- rust is a statically typed langueage (type of variables need to be known at compile time)
    - but the type can usually be inferred by the compiler

# string.rs
- 2 types of strings
    1. primitive string: immutable, fixed length
    2. String(): growable, heap allocated

# tuples.rs
- group together values of different types
- max of 12 elements

# arrays.rs
- fixed list where elements are the same type

# pointer_ref.rs
- points to a resource! in memory
- with primitive data types when you assign a varaible to a piece of data, the 
  first variable holds that value 
- with non-primitive, need to use reference (&) to point to the resource

# structs.rs
- used to create custom datatypes

# enums.rs
- enums are datatypes that have few definite values
    